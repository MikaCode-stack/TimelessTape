//This is only a test class to check if posts and get requests work, thus ensuring connection with database is reliable

using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using System.Security.AccessControl;
using System.Threading.Tasks;
using TimelessTapes.Data;
using TimelessTapes.Models; // Adjust namespace accordingly

[Route("api/[controller]")]
[ApiController]
public class DatabaseTestController : ControllerBase
{

    private readonly DBHandler _context;

    public DatabaseTestController(DBHandler context)
    {
        _context = context;
    }

    // Checking if data can be fetched from database table - Users
    [HttpGet("test-fetch")]
    public async Task<IActionResult> TestFetch()
    {
        try
        {
            var users = await _context.Users.ToListAsync();
            return Ok(new { message = "Fetch successful", users });
        }
        catch (Exception ex)
        {
            return BadRequest(new { message = "Fetch failed", error = ex.Message });
        }
    }

    // Checking if data can be input in database table - Users
    [HttpPost("test-insert")]
    public async Task<IActionResult> TestInsert([FromBody] User newUser)
    {
        try
        {
            // Remove UserId (Auto-generated by SQL Server)
            var user = new User
            {
                Name = newUser.Name,
                Email = newUser.Email,
                PasswordHash = newUser.PasswordHash,
                AccessType = newUser.AccessType
            };

            _context.Users.Add(user);
            await _context.SaveChangesAsync();

            return Ok(new { message = "Insert successful", user });
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Insert failed: {ex.Message}");
            return BadRequest(new { message = "Insert failed", error = ex.Message });
        }
    }


}
